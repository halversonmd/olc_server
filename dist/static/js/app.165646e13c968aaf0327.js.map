{"version":3,"sources":["webpack:///./static/js/gmaps.js","webpack:///./node_modules/b/lib/reporters ^\\.\\/.*$","webpack:///./static/js/mapControl.js","webpack:///./src/App.vue?0a30","webpack:///./src/App.vue","webpack:///src/components/olc_overview.vue","webpack:///src/App.vue","webpack:///./src/components/about.vue?07ef","webpack:///./src/components/about.vue","webpack:///src/components/about.vue","webpack:///./src/components/olc_overview.vue?49c2","webpack:///./src/components/olc_overview.vue","webpack:///src/components/plot_poi.vue","webpack:///./src/components/plot_poi.vue?dbf9","webpack:///./src/components/plot_poi.vue","webpack:///src/components/draw.vue","webpack:///./src/components/draw.vue?676b","webpack:///./src/components/draw.vue","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?481b","webpack:///./src/components/Home.vue","webpack:///src/components/contact.vue","webpack:///./src/components/contact.vue?0710","webpack:///./src/components/contact.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/api.js","webpack:///./static/js/openlocationcode.js"],"names":["TextOverlay","latLng","displayText","map","this","latLng_","displayText_","className_","map_","div_","heightOffset_","widthOffset_","setMap","prototype","google","maps","OverlayView","onAdd","div","document","createElement","className","innerHTML","style","position","getPanes","overlayLayer","appendChild","offsetHeight","offsetWidth","draw","getProjection","fromLatLngToDivPixel","left","x","top","y","onRemove","parentNode","removeChild","./cli","./cli.js","./json","./json.js","webpackContext","req","__webpack_require__","webpackContextResolve","id","Error","keys","Object","resolve","module","exports","defineProperty","__webpack_exports__","value","OpenLocationCode","api","default","exec","[object Object]","poly","Rectangle","marker","Marker","shapes","grid","clickedCodes","olcSizes","2","h","w","4","6","8","10","elemId","initMap","Map","getElementById","center","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","scaleControl","setTilt","globalMap","codes","coords","i","length","code","codeAreac","decode","newBoundc","LatLngBounds","latitudeLo","longitudeLo","latitudeHi","longitudeHi","bounds","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","lat","parseFloat","lng","icon","olc_size","currentCode","encode","hasOwnProperty","height","geometry","spherical","computeDistanceBetween","Math","round","width","self","lon","undefined","join","forEach","shape","olcSize","size","parseInt","getBounds","lat0","getNorthEast","lng0","lat1","getSouthWest","lng1","olcWidth","olcHeight","olcArr","j","midLat","lastCode","slice","midLon","lastRowStart","push","newBound","rad","resp","getOlcs","olcCodes","codeArea","pois","myLat","myLon","centerMarc","circleCenter1","cityCircle","Circle","radius","window","location","reload","olcCode","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","to","_v","text","staticRenderFns","_ref","src_App","normalizeComponent","name","ssrContext","components_about","href","src_components_about","about_normalizeComponent","mapCtl","MapControl","mapId","olc_overview","created","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","newMap","stop","olc_overview__this","apply","arguments","data","olcsLoaded","methods","loadMap","_this2","_callee2","_context2","loadOlc","components_olc_overview","cols","align-self","disabled","on","click","staticStyle","src_components_olc_overview","olc_overview_normalizeComponent","plot_poi_MapControl","plot_poi_mapCtl","plot_poi","plot_poi__this","olcText","uploadError","currentStatus","uploadFieldName","computed","isInitial","isSaving","isSuccess","isFailed","reset","uploadedFiles","upload","formData","olcs","postOlcs","plotList","filesChange","fieldName","fileList","FormData","from_default","Array","append","mounted","_ref2","_callee3","_context3","components_plot_poi","enctype","novalidate","type","multiple","accept","change","$event","target","files","_s","fileCount","_e","max-rows","model","callback","$$v","expression","src_components_plot_poi","plot_poi_normalizeComponent","draw_mapCtl","draw_MapControl","draw__this","olcImg","canDraw","selectOlcAlert","zoomSize","clickedData","setCanDraw","getZoom","clearMap","clear","loadOlcText","drawGrid","_thisVue","_this3","addListener","e","placeMarkerAndPanTo","components_draw","max-width","directives","rawName","domProps","checked","_q","for","src","role","aria-label","triggers","placement","container","Home","components","draw_normalizeComponent","olcOverview","plotPoi","components_Home","title","active","src_components_Home","Home_normalizeComponent","contact_api","contact","recaptchaScript","setAttribute","async","head","recaptchaSubmit","env","firstName","lastName","email","msg","ipInfo","submitForm","_this","clientInfoApi","getInfo","formSubmit","alert","components_contact","submit","preventDefault","placeholder","required","input","composing","$set","rows","data-sitekey","data-callback","src_components_contact","contact_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","component","config","productionTip","es","el","App","template","apiUrl","console","log","client","__WEBPACK_IMPORTED_MODULE_0_axios___default","create","baseURL","json","get","then","execute","method","resource","url","params","testGetOlcs","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","CODE_PRECISION_NORMAL","CODE_PRECISION_EXTRA","CODE_ALPHABET_","ENCODING_BASE_","PAIR_RESOLUTIONS_","isValid","getAlphabet","indexOf","lastIndexOf","padMatch","match","RegExp","SEPARATOR_POSITION_","charAt","len","replace","PADDING_CHARACTER_","character","toUpperCase","isShort","isFull","LATITUDE_MAX_","LONGITUDE_MAX_","latitude","longitude","codeLength","Number","isNaN","clipLatitude","normalizeLongitude","computeLatitudePrecision","encodePairs","min","encodeGrid","decodePairs","substring","gridArea","decodeGrid","CodeArea","recoverNearest","shortCode","referenceLatitude","referenceLongitude","paddingLength","resolution","pow","areaToEdge","substr","degreesDifference","latitudeCenter","longitudeCenter","shorten","range","max","abs","floor","adjustedLatitude","adjustedLongitude","digitCount","placeValue","digitValue","latPlaceValue","lngPlaceValue","row","col","decodePairsSequence","offset","codeIndex","fn","init","b","returnExportsGlobal"],"mappings":"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","file":"static/js/app.165646e13c968aaf0327.js","sourcesContent":["/*\n Copyright 2014 Google Inc. All rights reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n// Utility functions for the example HTML pages.\n\n/** Array of polygons/rectangles to be displayed. */\nvar polygons = [];\nfunction clearPolygons() {\n  for (var i = 0; i < polygons.length; i++) {\n    polygons[i].setMap(null);\n  }\n  polygons = [];\n}\n\n/** Array of text labels to be displayed. */\nvar textLabels = [];\nfunction clearTextLabels() {\n  for (var i = 0; i < textLabels.length; i++) {\n    textLabels[i].setMap(null);\n  }\n  textLabels = [];\n}\n\n/**\n  Zoom the map to a display a code area. If the zoom level is passed set the\n  maps zoom level.\n\n  @param {string} code The OLC code to zoom to the center of.\n  @param {zoomLevel} zoomLevel An optional zoom level. If not passed, the zoom\n      level is chosen in order to display the entire OLC code area.\n*/\nfunction zoomTo(code, zoomLevel) {\n  var codeArea = OpenLocationCode.decode(code);\n  var center = new google.maps.LatLng(\n      codeArea.latitudeCenter, codeArea.longitudeCenter);\n  map.setCenter(center);\n  if (typeof zoomLevel != 'undefined') {\n    map.setZoom(zoomLevel);\n    return;\n  }\n  var oldZoom = map.getZoom();\n  var sw = new google.maps.LatLng(codeArea.latitudeLo, codeArea.longitudeLo);\n  var ne = new google.maps.LatLng(codeArea.latitudeHi, codeArea.longitudeHi);\n  map.fitBounds(new google.maps.LatLngBounds(sw, ne));\n  var newZoom = map.getZoom();\n  if (newZoom < oldZoom) {\n    // We've had to zoom out to see it - that's ok.\n    return;\n  }\n  if (oldZoom > 14 && newZoom > 17) {\n    map.setZoom(oldZoom);\n  }\n}\n\n/**\n  Reformat an OLC code by decoding and encoding the center.\n\n  @param {string} code A valid full OLC code to reformat.\n  @return {string} The formatted code.\n*/\nfunction formatCode(code) {\n  var codeArea = OpenLocationCode.decode(code);\n  return OpenLocationCode.encode(\n      codeArea.latitudeCenter, codeArea.longitudeCenter, codeArea.codeLength);\n}\n\n/**\n  Create a rectangle for an OLC code.\n\n  @param {goog.maps.Map} map The map to place the polygon on.\n  @param {string} code The OLC code to display.\n  @param {string} fill The color to use for the outline and fill (CSS syntax).\n  @return {goog.maps.Rectangle} The rectangle for the code.\n*/\nfunction displayOlcArea(map, code, fill) {\n    if (typeof fill == 'undefined') {\n      fill = '#e51c23';\n    }\n  var codeArea = OpenLocationCode.decode(code);\n  var sw = new google.maps.LatLng(codeArea.latitudeLo, codeArea.longitudeLo);\n  var ne = new google.maps.LatLng(codeArea.latitudeHi, codeArea.longitudeHi);\n  var bounds = new google.maps.LatLngBounds(sw, ne);\n\n  // Draw the rectangle.\n  var rectangle = new google.maps.Rectangle({\n      bounds: bounds,\n      strokeColor: fill,\n      strokeOpacity: 1.0,\n      strokeWeight: 2,\n      fillColor: fill,\n      fillOpacity: 0.3,\n      clickable: false,\n      map: map\n  });\n  return rectangle;\n}\n\n// Geocoder functions.\n\n/**\n  Geocode an address to get a lat/lng and call a callback function. Errors are\n  written to an element with the id 'address'.\n\n  @param {string} olcCode The OLC code to pass to the callback function.\n  @param {string} address The address to geocode.\n  @param {*} callbackFunction A function to call with the OLC code, the address\n      and the coordinates of the address.\n  */\nfunction geocodeAddress(olcCode, address, callbackFunction) {\n  if (typeof google === 'undefined' || typeof google.maps === 'undefined') {\n    return false;\n  }\n  // Google Maps API geocoder object.\n  var geocoder = new google.maps.Geocoder();\n  // Send the address off to the geocoder.\n  geocoder.geocode(\n      {'address': address},\n      function(results, status) {\n        if (status != google.maps.GeocoderStatus.OK) {\n          document.getElementById('address').innerHTML = 'Geocoder failed';\n          return;\n        }\n        var addressLocation = results[0].geometry.location;\n        callbackFunction(\n            olcCode, address, addressLocation.lat(), addressLocation.lng());\n      });\n}\n\n/**\n  Reverse geocode a lat/lng, extract an address and call a callback function.\n  Errors are written to an element with the id 'address'.\n\n  @param {number} lat The latitude in degrees.\n  @param {number} lng The longitude in degrees.\n  @param {string} olcCode The OLC code to pass to the callback function.\n  @param {*} callbackFunction A function to call with the OLC code and the\n      address.\n*/\nfunction geocodeLatLng(lat, lng, olcCode, callbackFunction) {\n  if (typeof google === 'undefined' || typeof google.maps === 'undefined') {\n    return false;\n  }\n  // Google Maps API geocoder object.\n  var geocoder = new google.maps.Geocoder();\n  // Reverse geocode the lat/lng.\n  var latlng = new google.maps.LatLng(lat, lng);\n  geocoder.geocode(\n      {'latLng': latlng},\n      function(results, status) {\n        if (status != google.maps.GeocoderStatus.OK) {\n          document.getElementById('address').innerHTML = 'Geocoder failed';\n          return;\n        }\n        var addressNames = [];\n        var addressComponents = [];\n        // We always want the postal code.\n        var postal_code = '';\n        // Defines the other component types in the order we want them.\n        var componentTypes = [\n            'neighborhood',\n            'sublocality_level_2',\n            'sublocality_level_1',\n            'locality',\n            'administrative_area_level_4',\n            'administrative_area_level_3',\n            'administrative_area_level_2',\n            'administrative_area_level_1'];\n        // Scan all the results and all the address components for matches\n        // with the desired types. Take the first match for any component and\n        // save them in the addressXXX lists.\n        for (var i = 0; i < results.length; i++) {\n          for (var j = 0; j < results[i].address_components.length; j++) {\n            var component = results[i].address_components[j];\n            for (var k = 0; k < component.types.length; k++) {\n              if (componentTypes.indexOf(component.types[k]) > -1 &&\n                  addressComponents.indexOf(component.types[k]) == -1 &&\n                  addressNames.indexOf(component.long_name) == -1 &&\n                  component.long_name.indexOf(',') == -1) {\n                addressNames.push(component.long_name);\n                addressComponents.push(component.types[k]);\n              }\n            }\n          }\n        }\n        // Go through the componentTypes in order and build up the address.\n        var geocodedAddress = [];\n        for (var i = 0; i < componentTypes.length; i++) {\n          var componentIndex = addressComponents.indexOf(componentTypes[i]);\n          if (componentIndex != -1) {\n            geocodedAddress.push(addressNames[componentIndex]);\n          }\n          if (geocodedAddress.length == 3) {\n            break;\n          }\n        }\n        // Add the postal code if we got one.\n        if (postal_code !== '') {\n          geocodedAddress.push(postal_code);\n        }\n        // Call the callback function.\n        callbackFunction(olcCode, geocodedAddress.join(', '));\n      });\n}\n\n/**\n  Display an OLC outline and its internal grid.\n  If the passed OLC code is blank, the top level OLC grid is displayed.\n\n  @constructor\n  @param {string} olcCode A full OLC code.\n  @param {string} lineColor The color to use for lines (CSS syntax).\n  @param {goog.maps.Map} map The Google Maps API map.\n*/\nvar OlcStandardGrid = function(olcCode, lineColor, map) {\n  // Now initialize all properties.\n  var latLo, latHi, lngLo, lngHi;\n  var latSteps = 20;\n  var lngSteps = 20;\n  var stepDegrees;\n  if (olcCode != '') {\n    var codeArea = OpenLocationCode.decode(olcCode);\n    latLo = codeArea.latitudeLo;\n    latHi = codeArea.latitudeHi;\n    lngLo = codeArea.longitudeLo;\n    lngHi = codeArea.longitudeHi;\n    stepDegrees = (latHi - latLo) / latSteps;\n    steps = 20;\n  } else {\n    latLo = -90;\n    latHi = 90;\n    lngLo = -180;\n    lngHi = 180;\n    stepDegrees = 20;\n    latSteps = 9;\n    lngSteps = 18;\n  }\n  // Quarter and half step sizes are for label offsets.\n  var quarterStep = stepDegrees / 4;\n  var halfStep = stepDegrees / 2;\n\n  // Save the gridlines and labels so we can clear them.\n  this.gridlines_ = [];\n  this.labels_ = [];\n\n  // Now draw the vertical grid lines and add their indicators.\n  for (var step = 0; step <= lngSteps; step++) {\n    var lng = lngLo + step * stepDegrees;\n    var path = [new google.maps.LatLng(latLo, lng),\n                new google.maps.LatLng((latLo + latHi) / 2, lng),\n                new google.maps.LatLng(latHi, lng)];\n    var line = new google.maps.Polyline({\n      path: path,\n      strokeColor: lineColor,\n      strokeOpacity: 1,\n      strokeWeight: 2,\n      clickable: false,\n      map: map\n    });\n    this.gridlines_.push(line);\n    if (step < lngSteps) {\n      var label = new TextOverlay(\n          new google.maps.LatLng(latHi - quarterStep, lng + halfStep),\n          OpenLocationCode.getAlphabet().charAt(step),\n          map);\n      this.labels_.push(label);\n      var label = new TextOverlay(\n        new google.maps.LatLng(latLo + quarterStep, lng + halfStep),\n        OpenLocationCode.getAlphabet().charAt(step),\n        map);\n      this.labels_.push(label);\n    }\n  }\n  // Now draw the horizontal grid lines.\n  for (var step = 0; step <= latSteps; step++) {\n    var lat = latLo + step * stepDegrees;\n    var path = [new google.maps.LatLng(lat, lngLo),\n                new google.maps.LatLng(lat, (lngLo + lngHi) / 2),\n                new google.maps.LatLng(lat, lngHi)];\n    var line = new google.maps.Polyline({\n      path: path,\n      strokeColor: lineColor,\n      strokeOpacity: 1,\n      strokeWeight: 2,\n      clickable: false,\n      map: map\n    });\n    this.gridlines_.push(line);\n    if (step < latSteps) {\n      var label = new TextOverlay(\n          new google.maps.LatLng(lat + halfStep, lngLo + quarterStep),\n          OpenLocationCode.getAlphabet().charAt(step),\n          map);\n      this.labels_.push(label);\n      var label = new TextOverlay(\n        new google.maps.LatLng(lat + halfStep, lngHi - quarterStep),\n        OpenLocationCode.getAlphabet().charAt(step),\n        map);\n      this.labels_.push(label);\n    }\n  }\n};\n\n/** Called when the map's panes are ready and the overlay has been added. */\nOlcStandardGrid.prototype.clear = function() {\n  for (var i = 0; i < this.gridlines_.length; i++) {\n    this.gridlines_[i].setMap(null);\n  }\n  this.gridlines_ = [];\n  for (var i = 0; i < this.labels_.length; i++) {\n    this.labels_[i].setMap(null);\n  }\n  this.labels_ = [];\n};\n\n/**\n  Display an OLC outline and its internal 4x5 grid.\n  @constructor\n  @param {string} olcCode A full OLC code.\n  @param {string} lineColor The color to use for lines (CSS syntax).\n  @param {goog.maps.Map} map The Google Maps API map.\n*/\nfunction OlcRefinedGrid(olcCode, lineColor, map) {\n  // Initialize all properties.\n  var codeArea = OpenLocationCode.decode(olcCode);\n  var sw = new google.maps.LatLng(codeArea.latitudeLo, codeArea.longitudeLo);\n  var ne = new google.maps.LatLng(codeArea.latitudeHi, codeArea.longitudeHi);\n  var bounds = new google.maps.LatLngBounds(sw, ne);\n\n  this.gridlines_ = [];\n  this.labels_ = [];\n  var lngStep = (codeArea.longitudeHi - codeArea.longitudeLo) / 4;\n  var lngHalfStep = lngStep / 2;\n  var latStep = (codeArea.latitudeHi - codeArea.latitudeLo) / 5;\n  var latHalfStep = latStep / 2;\n  // Now draw the vertical grid lines.\n  for (var i = 0; i <= 4; i++) {\n    var lower = new google.maps.LatLng(\n        codeArea.latitudeLo, codeArea.longitudeLo + i * lngStep);\n    var upper = new google.maps.LatLng(\n        codeArea.latitudeHi, codeArea.longitudeLo + i * lngStep);\n    var line = new google.maps.Polyline({\n      path: [lower, upper],\n      strokeColor: lineColor,\n      strokeOpacity: 1,\n      strokeWeight: 2,\n      clickable: false,\n      map: map\n    });\n    this.gridlines_.push(line);\n  }\n  // Now draw the horizontal grid lines.\n  for (var i = 0; i <= 5; i++) {\n    var left = new google.maps.LatLng(\n        codeArea.latitudeLo + i * latStep, codeArea.longitudeLo);\n    var right = new google.maps.LatLng(\n        codeArea.latitudeLo + i * latStep, codeArea.longitudeHi);\n    var line = new google.maps.Polyline({\n      path: [left, right],\n      strokeColor: lineColor,\n      strokeOpacity: 1,\n      strokeWeight: 2,\n      clickable: false,\n      map: map\n    });\n    this.gridlines_.push(line);\n  }\n  for (var col = 0; col < 4; col++) {\n    for (var row = 0; row < 5; row++) {\n      var center = new google.maps.LatLng(\n          codeArea.latitudeLo + latHalfStep + row * latStep,\n          codeArea.longitudeLo + lngHalfStep + col * lngStep);\n      var label = new TextOverlay(\n          center,\n          OpenLocationCode.getAlphabet().charAt(row * 4 + col),\n          map);\n      this.labels_.push(label);\n    }\n  }\n}\n\n/** Called when the map's panes are ready and the overlay has been added. */\nOlcRefinedGrid.prototype.clear = function() {\n  for (var i = 0; i < this.gridlines_.length; i++) {\n    this.gridlines_[i].setMap(null);\n  }\n  this.gridlines_ = [];\n  for (var i = 0; i < this.labels_.length; i++) {\n    this.labels_[i].setMap(null);\n  }\n  this.labels_ = [];\n};\n\n/** Define the text overlay prototype as an OverlayView. */\nTextOverlay.prototype = new google.maps.OverlayView();\n\n/**\n   Create a new text overlay to display text on the map.\n\n   @constructor\n   @param {goog.maps.LatLng} latLng The location to place the text.\n   @param {string} displayText The text to place.\n   @param {goog.maps.Map} map The Google Maps API map.\n */\nfunction TextOverlay(latLng, displayText, map) {\n  // Now initialize all properties.\n  this.latLng_ = latLng;\n  this.displayText_ = displayText;\n  this.className_ = 'map_label';\n  this.map_ = map;\n  this.div_ = null;\n  this.heightOffset_ = 0;\n  this.widthOffset_ = 0;\n  this.setMap(map);\n}\n\n/** Called when the map's panes are ready and the overlay has been added. */\nTextOverlay.prototype.onAdd = function() {\n  var div = document.createElement('DIV');\n  div.className = this.className_;\n  div.innerHTML = this.displayText_;\n  div.style.position = 'absolute';\n  this.div_ = div;\n  var panes = this.getPanes();\n  panes.overlayLayer.appendChild(div);\n  this.heightOffset_ = this.div_.offsetHeight / 2;\n  this.widthOffset_ = this.div_.offsetWidth / 2;\n};\n/** Called to draw the overlay. */\nTextOverlay.prototype.draw = function() {\n  var overlayProjection = this.getProjection();\n  var position = overlayProjection.fromLatLngToDivPixel(this.latLng_);\n  this.div_.style.left = (position.x - this.widthOffset_) + 'px';\n  this.div_.style.top = (position.y - this.heightOffset_) + 'px';\n};\n/** Called when the overlay's map property is set to null. */\nTextOverlay.prototype.onRemove = function() {\n  this.div_.parentNode.removeChild(this.div_);\n  this.div_ = null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/gmaps.js\n// module id = FflU\n// module chunks = 1","var map = {\n\t\"./cli\": \"znem\",\n\t\"./cli.js\": \"znem\",\n\t\"./json\": \"sXY0\",\n\t\"./json.js\": \"sXY0\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Fssm\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/b/lib/reporters ^\\.\\/.*$\n// module id = Fssm\n// module chunks = 1","let OpenLocationCode = require('./openlocationcode.js')\nlet gmaps = require('./gmaps.js')\nlet api = require('../../src/api.js').default.exec\n\nclass MapControl {\n    constructor() {\n      this.poly = new google.maps.Rectangle()\n      this.marker = new google.maps.Marker()\n      this.shapes = []\n      this.grid = []\n      this.clickedCodes = {}\n      this.olcSizes = {\n        2: {h: 2226389.8, w: 1925641.3},\n        4: {h: 111319.5, w: 74486.8},\n        6: {h: 5000, w: 4000},\n        8: {h: 220, w: 210},\n        10: {h: 12, w: 15}\n      }\n    }\n    newMap(elemId) {\n      var initMap = new google.maps.Map(document.getElementById(elemId), {\n          center: new google.maps.LatLng(40.742192046649755, -73.99111747741699),\n          zoom: 11,\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\n          scaleControl: true});\n      initMap.setTilt(0);\n      this.globalMap = initMap\n    }\n    clearPoly() {\n      this.poly.setMap(null);\n    }\n    plotList(codes, coords) {\n      for (var i=0; i<codes.length; i++){\n        var code = codes[i]\n        var codeAreac = OpenLocationCode.decode(code);\n        var newBoundc = new google.maps.LatLngBounds(\n          new google.maps.LatLng(codeAreac.latitudeLo, codeAreac.longitudeLo),\n          new google.maps.LatLng(codeAreac.latitudeHi, codeAreac.longitudeHi));\n        var poly = new google.maps.Rectangle({\n          map: this.globalMap,\n          bounds: newBoundc,\n          strokeColor: '#000000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#e51c23',\n          fillOpacity: 0.6,\n          clickable: false\n        });\n      }\n      for (var i=0; i<coords.length; i++){\n        var image = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';\n        var centerMarc = new google.maps.Marker({\n            position: {lat: parseFloat(coords[i][0]), lng: parseFloat(coords[i][1])},\n            map: this.globalMap,\n            icon: image\n          });\n      }\n    }\n    placeMarkerAndPanTo(latLng, olc_size) {\n      var currentCode = OpenLocationCode.encode(latLng.lat(), latLng.lng(), olc_size);\n      if (this.clickedCodes.hasOwnProperty(currentCode)){\n        this.clickedCodes[currentCode].setMap(null)\n        delete this.clickedCodes[currentCode]\n      } else {\n        var codeAreac = OpenLocationCode.decode(currentCode);\n        var newBoundc = new google.maps.LatLngBounds(\n          new google.maps.LatLng(codeAreac.latitudeLo, codeAreac.longitudeLo),\n          new google.maps.LatLng(codeAreac.latitudeHi, codeAreac.longitudeHi));\n        var height = google.maps.geometry.spherical.computeDistanceBetween(\n          new google.maps.LatLng(codeAreac.latitudeLo, codeAreac.longitudeLo),\n          new google.maps.LatLng(codeAreac.latitudeHi, codeAreac.longitudeLo));\n        height = Math.round(height * 10) / 10;\n        var width = google.maps.geometry.spherical.computeDistanceBetween(\n          new google.maps.LatLng(codeAreac.latitudeLo, codeAreac.longitudeLo),\n          new google.maps.LatLng(codeAreac.latitudeLo, codeAreac.longitudeHi));\n        width = Math.round(width * 10) / 10;\n        var poly = new google.maps.Rectangle({\n          map: this.globalMap,\n          bounds: newBoundc,\n          strokeColor: '#000000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#e51c23',\n          fillOpacity: 0.6,\n          clickable: false\n        });\n        this.clickedCodes[currentCode] = poly\n      }\n      self.lat = latLng.lat();\n      self.lon = latLng.lng();\n      self.currentCode = currentCode;\n    }\n    olcText(codes) {\n      if (codes != undefined){\n        return codes.join('\\n')\n      } else {\n        return Object.keys(this.clickedCodes).join('\\n')\n      }\n    }\n    clear () {\n      this.shapes.forEach( (shape) => {\n        shape.setMap(null)\n      })\n      let clickedOlcs = Object.keys(this.clickedCodes)\n      clickedOlcs.forEach( (shape) => {\n        this.clickedCodes[shape].setMap(null)\n      })\n      this.shapes = []\n      this.clickedCodes = {}\n    }\n    drawGrid (olcSize) {\n      this.shapes.forEach( (shape) => {\n        shape.setMap(null)\n      })\n      this.shapes = []\n      var size = parseInt(olcSize)\n      var bounds = this.globalMap.getBounds()\n      var lat0 = bounds.getNorthEast().lat();\n      var lng0 = bounds.getNorthEast().lng();\n      var lat1 = bounds.getSouthWest().lat();\n      var lng1 = bounds.getSouthWest().lng();\n      var height = google.maps.geometry.spherical.computeDistanceBetween(\n        new google.maps.LatLng(lat0, lng0),\n        new google.maps.LatLng(lat0, lng1))\n      height = Math.round(height * 5);\n      var width = google.maps.geometry.spherical.computeDistanceBetween(\n        new google.maps.LatLng(lat0, lng1),\n        new google.maps.LatLng(lat1, lng1))\n      width = Math.round(width * 5);\n      var olcWidth = width / this.olcSizes[size].w\n      olcWidth = Math.round(olcWidth);\n      var olcHeight = height / this.olcSizes[size].h\n      olcHeight = Math.round(olcHeight);\n      var olcArr = [OpenLocationCode.encode(lat0, lng1, size)]\n      for (var i = 0; i < olcWidth; i++){\n        for (var j = 0; j < olcHeight; j++){\n          var lastCode = OpenLocationCode.decode(olcArr.slice(-1)[0])\n          var midLat = lastCode.latitudeHi - ((lastCode.latitudeHi-lastCode.latitudeLo)/2)\n          var midLon = lastCode.longitudeHi + ((lastCode.longitudeHi-lastCode.longitudeLo)/2)\n          if (j == 0) {\n            var lastRowStart = olcArr.slice(-1)[0]\n          }\n          olcArr.push(OpenLocationCode.encode(midLat, midLon, size))\n        }\n        if (i == olcWidth-1) {\n          { break; }\n        } else {\n          var lastCode = OpenLocationCode.decode(lastRowStart)\n          var midLat = lastCode.latitudeLo - ((lastCode.latitudeHi-lastCode.latitudeLo)/2)\n          var midLon = lastCode.longitudeHi - ((lastCode.longitudeHi-lastCode.longitudeLo)/2)\n          olcArr.push(OpenLocationCode.encode(midLat, midLon, size))\n        }\n      }\n      for (var i=0; i<olcArr.length; ++i){\n        var code = OpenLocationCode.decode(olcArr[i])\n        var newBound = new google.maps.LatLngBounds(\n            new google.maps.LatLng(code.latitudeLo, code.longitudeLo),\n            new google.maps.LatLng(code.latitudeHi, code.longitudeHi));\n\n        var poly = new google.maps.Rectangle({\n          map: this.globalMap,\n          bounds: newBound,\n          strokeColor: '#000000',\n          strokeOpacity: 0.2,\n          strokeWeight: 1,\n          fillColor: '#e51c23',\n          fillOpacity: 0.0,\n          clickable: false\n        });\n        this.shapes.push(poly)\n      }\n    }\n    async loadOlc(latLng, rad, size) {\n      if (latLng == undefined) {\n        var lat = 40.742192046649755\n        var lon = -73.99111747741699\n        var rad = 5\n        var size = 6\n      } else {\n        var lat = latLng.lat()\n        var lon = latLng.lng()\n      }\n      const resp = await api.getOlcs(lat, lon, rad, size)\n      for (var i = 0; i<this.shapes.length; i++){\n        this.shapes[i].setMap(null);\n      }\n      for (var i=0; i<resp.olcCodes.length; ++i){\n        var codeArea = OpenLocationCode.decode(resp.olcCodes[i]);\n        var newBound = new google.maps.LatLngBounds(\n            new google.maps.LatLng(codeArea.latitudeLo, codeArea.longitudeLo),\n            new google.maps.LatLng(codeArea.latitudeHi, codeArea.longitudeHi));\n        var poly = new google.maps.Rectangle({\n          map: this.globalMap,\n          bounds: newBound,\n          strokeColor: '#000000',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#e51c23',\n          fillOpacity: 0.6,\n          clickable: false\n        });\n        this.shapes.push(poly)\n      };\n      for (var i=0; i<resp.pois.length; ++i){\n        var myLat = parseFloat(resp.pois[i][0])\n        var myLon = parseFloat(resp.pois[i][1])\n        var image = 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png';\n        var centerMarc = new google.maps.Marker({\n            position: {lat: myLat, lng: myLon},\n            map: this.globalMap,\n            icon: image\n          });\n        var circleCenter1 = new google.maps.LatLng(myLat, myLon)\n        var cityCircle = new google.maps.Circle({\n          strokeColor: '#0000FF',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#0000FF',\n          fillOpacity: 0.5,\n          map: this.globalMap,\n          center: circleCenter1,\n          radius: rad*1609.34 //meters\n        });\n        this.shapes.push(cityCircle)\n        this.shapes.push(centerMarc)\n      }\n      this.shapes = []\n    }\n    refreshPage() {\n      window.location.reload()\n    }\n    clickData() {\n      return {\n        lat: self.lat,\n        lon: self.lon,\n        olcCode: self.currentCode\n      }\n    }\n  }\n\n\nexport default MapControl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/mapControl.js\n// module id = N7Ue\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"myolc\"}},[_c('nav',{staticClass:\"navbar navbar-expand-lg navbar-dark bg-dark justify-content-between\"},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Home\")]),_vm._v(\" \"),_c('b-dropdown',{staticClass:\"my-2 my-sm-0\",attrs:{\"id\":\"ddown-right\",\"text\":\"More\"}},[_c('b-dropdown-item',[_c('router-link',{attrs:{\"to\":\"/about\"}},[_vm._v(\"About\")])],1),_vm._v(\" \"),_c('b-dropdown-item',[_c('router-link',{attrs:{\"to\":\"/contact\"}},[_vm._v(\"Contact\")])],1)],1)],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('router-view'),_vm._v(\" \"),_c('br')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-00687ac8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-00687ac8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-00687ac8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <b-container class=\"bv-example-row bv-example-row-flex-cols\">\n    <b-row class=\"py-2\">\n      <b-col cols=\"10\">\n        <p>\n          Open Location Codes (OLCs) are innovative geographical indentifiers, developed by Google engineers.  Physically, the are retangular geographical areas that cover the globe in a grid-like pattern.  They come in five different sizes and each OLC had a unique indentifier.  They are also known as <a href=\"https://plus.codes/\">Plus Codes</a>.\n        </p>\n        <p>\n          Click the button below and you will see a circle centered in Manhattan with a five mile radius and twelve OLC codes of length six that roughly correlate to the same area.  This is to illustrate how OLCs can be used in place of lat/longs with radius for local digital advertising.\n        </p>\n      </b-col>\n    </b-row>\n    <b-row class=\"py-2\">\n      <b-col align-self=\"center\" cols=\"8\">\n        <b-btn class=\"btn-primary sm\" v-on:click=\"loadMap\" :disabled=\"olcsLoaded\">Show OLCs</b-btn>\n      </b-col>\n    </b-row>\n    <b-row class=\"py-2\">\n      <b-col>\n        <div id=\"map-canvas-overview\" class=\"w-100\" style=\"height: 500px\"></div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\n\nlet MapControl = require('../../static/js/mapControl').default\n\nlet mapCtl = new MapControl()\nlet mapId = 'map-canvas-overview'\n\nexport default {\n  created: async () => {\n    mapCtl.globalMap = await document.getElementById(mapId)\n    mapCtl.newMap(mapId)\n  },\n  name: 'overview',\n  data () {\n    return {\n      olcsLoaded: false\n    }\n  },\n  methods: {\n    async loadMap () {\n      await mapCtl.loadOlc()\n      this.olcsLoaded = true\n    }\n  }\n}\n\n</script>\n\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/olc_overview.vue","<template>\n  <div id=\"myolc\">\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark justify-content-between\">\n      <router-link to=\"/\">Home</router-link>\n      <b-dropdown id=\"ddown-right\" text=\"More\" class=\"my-2 my-sm-0\">\n        <b-dropdown-item>\n          <router-link to=\"/about\">About</router-link>\n        </b-dropdown-item>\n        <b-dropdown-item>\n          <router-link to=\"/contact\">Contact</router-link>\n        </b-dropdown-item>\n      </b-dropdown>\n    </nav>\n    <br>\n    <router-view></router-view>\n    <br>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'olc'\n}\n</script>\n\n<style>\n.navbar-nav > li > a, .navbar-brand {\n    padding-top:5px !important; padding-bottom:0 !important;\n    height: 30px;\n}\n.navbar {min-height:20px !important;}\n#olc {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"bv-example-row bv-example-row-flex-cols\"},[_c('div',{staticClass:\"row justify-content-center\"},[_c('div',{staticClass:\"col col-10\"},[_c('p',[_vm._v(\"\\n        Openlocation.codes is a resource for people to learn more about Open Location Codes, how to use them, and generate them.  For more information, please refer to the \"),_c('a',{attrs:{\"href\":\"https://plus.codes/\"}},[_vm._v(\"official site \")]),_vm._v(\".\\n      \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n        If you want to suggest additional functionality for this site or contact the owner, please do so \"),_c('router-link',{attrs:{\"to\":\"/contact\"}},[_vm._v(\"here\")])],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-87abf1c8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/about.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./about.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./about.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-87abf1c8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./about.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/about.vue\n// module id = null\n// module chunks = ","<template>\n  <b-container class=\"bv-example-row bv-example-row-flex-cols\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col col-10\">\n        <p>\n          Openlocation.codes is a resource for people to learn more about Open Location Codes, how to use them, and generate them.  For more information, please refer to the <a href=\"https://plus.codes/\">official site </a>.\n        </p>\n        <p>\n          If you want to suggest additional functionality for this site or contact the owner, please do so <router-link to=\"/contact\">here</router-link>\n        </p>\n      </div>\n    </div>\n  </b-container>\n</template>\n\n<script>\n\nexport default {\n  name: 'about'\n}\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/about.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"bv-example-row bv-example-row-flex-cols\"},[_c('b-row',{staticClass:\"py-2\"},[_c('b-col',{attrs:{\"cols\":\"10\"}},[_c('p',[_vm._v(\"\\n        Open Location Codes (OLCs) are innovative geographical indentifiers, developed by Google engineers.  Physically, the are retangular geographical areas that cover the globe in a grid-like pattern.  They come in five different sizes and each OLC had a unique indentifier.  They are also known as \"),_c('a',{attrs:{\"href\":\"https://plus.codes/\"}},[_vm._v(\"Plus Codes\")]),_vm._v(\".\\n      \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n        Click the button below and you will see a circle centered in Manhattan with a five mile radius and twelve OLC codes of length six that roughly correlate to the same area.  This is to illustrate how OLCs can be used in place of lat/longs with radius for local digital advertising.\\n      \")])])],1),_vm._v(\" \"),_c('b-row',{staticClass:\"py-2\"},[_c('b-col',{attrs:{\"align-self\":\"center\",\"cols\":\"8\"}},[_c('b-btn',{staticClass:\"btn-primary sm\",attrs:{\"disabled\":_vm.olcsLoaded},on:{\"click\":_vm.loadMap}},[_vm._v(\"Show OLCs\")])],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"py-2\"},[_c('b-col',[_c('div',{staticClass:\"w-100\",staticStyle:{\"height\":\"500px\"},attrs:{\"id\":\"map-canvas-overview\"}})])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4674f675\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/olc_overview.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4674f675\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./olc_overview.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./olc_overview.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./olc_overview.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4674f675\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./olc_overview.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4674f675\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/olc_overview.vue\n// module id = null\n// module chunks = ","<template>\n  <b-container class=\"bv-example-row bv-example-row-flex-cols\">\n    <b-row class=\"py-2\">\n      <b-col cols=\"12\">\n        <p>\n          Open Location Codes have several uses.  One of which is geotargeting digial media campaigns. AppNexus, when used as a DSP allows you to geo target campaigns with OLCs.  The two main benefits to geotargeting with OLCs are targeting custom geo boundaries and ensuring accurate location inventory.\n        </p>\n        <p>\n          Upload a CSV file (two columns - latitude and longitude) to see what an address list with a five mile radius looks like as OLCs.  You can also use the generated OLCs to geotarget campaigns on AppNexus.\n        </p>\n    </b-col>\n    </b-row>\n<!--     <b-row class=\"py-2\">\n      <button v-on:click=\"testPlot\">testPlot</button>\n    </b-row> -->\n    <b-row class=\"py-2\">\n      <b-col align-self=\"center\" cols=\"8\">\n        <form enctype=\"multipart/form-data\" novalidate v-if=\"isInitial || isSaving\">\n          <h1>Upload Coords</h1>\n          <div class=\"dropbox\">\n            <input type=\"file\" multiple :name=\"uploadFieldName\" :disabled=\"isSaving\" @change=\"filesChange($event.target.name, $event.target.files)\" accept=\"csv\" class=\"input-file\">\n              <p v-if=\"isSaving\">\n                Uploading {{ fileCount }} files...\n              </p>\n          </div>\n        </form>\n      </b-col>\n    </b-row>\n    <b-row class=\"py-2\">\n      <b-col>\n        <div id=\"map-canvas-plot\" class=\"w-100\" style=\"height: 500px\"></div>\n      </b-col>\n      <b-col cols=\"3\">\n        <span>New OLCs:</span>\n        <b-form-textarea\n          v-model=\"olcText\"\n          :disabled=\"true\"\n          :max-rows=\"15\">\n        </b-form-textarea>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\n\nlet MapControl = require('../../static/js/mapControl').default\nlet api = require('../../src/api.js').default\n\nlet mapCtl = new MapControl()\nlet mapId = 'map-canvas-plot'\nconst STATUS_INITIAL = 0\nconst STATUS_SAVING = 1\nconst STATUS_SUCCESS = 2\nconst STATUS_FAILED = 3\n\nexport default {\n  created: async () => {\n    mapCtl.globalMap = await document.getElementById(mapId)\n    mapCtl.newMap(mapId)\n  },\n  name: 'olcMap',\n  data () {\n    return {\n      olcSize: false,\n      map: null,\n      olcText: '',\n      uploadError: null,\n      currentStatus: null,\n      uploadFieldName: 'olcs'\n    }\n  },\n  computed: {\n    isInitial () {\n      return this.currentStatus === STATUS_INITIAL\n    },\n    isSaving () {\n      return this.currentStatus === STATUS_SAVING\n    },\n    isSuccess () {\n      return this.currentStatus === STATUS_SUCCESS\n    },\n    isFailed () {\n      return this.currentStatus === STATUS_FAILED\n    }\n  },\n  methods: {\n    reset () {\n      this.currentStatus = STATUS_INITIAL\n      this.uploadedFiles = []\n      this.uploadError = null\n    },\n    async upload (formData) {\n      const olcs = await api.postOlcs(formData)\n      mapCtl.plotList(olcs.olcCodes, olcs.pois)\n      this.olcText = mapCtl.olcText(olcs.olcCodes)\n    },\n    filesChange (fieldName, fileList) {\n      const formData = new FormData()\n      if (!fileList.length) return\n      Array\n        .from(Array(fileList.length).keys())\n        .map(x => {\n          formData.append('olcFile', fileList[x])\n        })\n      this.upload(formData)\n    }\n  },\n  mounted: async function () {\n    this.reset()\n  }\n}\n\n</script>\n\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/plot_poi.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"bv-example-row bv-example-row-flex-cols\"},[_c('b-row',{staticClass:\"py-2\"},[_c('b-col',{attrs:{\"cols\":\"12\"}},[_c('p',[_vm._v(\"\\n          Open Location Codes have several uses.  One of which is geotargeting digial media campaigns. AppNexus, when used as a DSP allows you to geo target campaigns with OLCs.  The two main benefits to geotargeting with OLCs are targeting custom geo boundaries and ensuring accurate location inventory.\\n        \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n          Upload a CSV file (two columns - latitude and longitude) to see what an address list with a five mile radius looks like as OLCs.  You can also use the generated OLCs to geotarget campaigns on AppNexus.\\n        \")])])],1),_vm._v(\" \"),_c('b-row',{staticClass:\"py-2\"},[_c('b-col',{attrs:{\"align-self\":\"center\",\"cols\":\"8\"}},[(_vm.isInitial || _vm.isSaving)?_c('form',{attrs:{\"enctype\":\"multipart/form-data\",\"novalidate\":\"\"}},[_c('h1',[_vm._v(\"Upload Coords\")]),_vm._v(\" \"),_c('div',{staticClass:\"dropbox\"},[_c('input',{staticClass:\"input-file\",attrs:{\"type\":\"file\",\"multiple\":\"\",\"name\":_vm.uploadFieldName,\"disabled\":_vm.isSaving,\"accept\":\"csv\"},on:{\"change\":function($event){_vm.filesChange($event.target.name, $event.target.files)}}}),_vm._v(\" \"),(_vm.isSaving)?_c('p',[_vm._v(\"\\n                Uploading \"+_vm._s(_vm.fileCount)+\" files...\\n              \")]):_vm._e()])]):_vm._e()])],1),_vm._v(\" \"),_c('b-row',{staticClass:\"py-2\"},[_c('b-col',[_c('div',{staticClass:\"w-100\",staticStyle:{\"height\":\"500px\"},attrs:{\"id\":\"map-canvas-plot\"}})]),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('span',[_vm._v(\"New OLCs:\")]),_vm._v(\" \"),_c('b-form-textarea',{attrs:{\"disabled\":true,\"max-rows\":15},model:{value:(_vm.olcText),callback:function ($$v) {_vm.olcText=$$v},expression:\"olcText\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8e5c8ee8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/plot_poi.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8e5c8ee8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./plot_poi.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./plot_poi.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./plot_poi.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8e5c8ee8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./plot_poi.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8e5c8ee8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/plot_poi.vue\n// module id = null\n// module chunks = ","<template>\n  <b-container class=\"bv-example-row bv-example-row-flex-cols\">\n    <div class=\"col\">\n      <div class=\"row\">\n        <div class=\"col d-flex justify-content-between\" style=\"max-width: 700px;\">\n          <p>\n            Click around the map below to create custom geo boundaries using OLCs with various sizes.  The codes you choose will appear in the adjacent text box.\n          </p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col justify-content-between\" style=\"max-width: 700px;\">\n          <div class=\"card-group\">\n            <div class=\"card border-light bg-light\">\n              <div class=\"card-header h-25\">OLC Size:</div>\n              <div class=\"card-body\">\n                <input type=\"radio\" id=\"ten\" value=10 v-model=\"olcSize\" v-on:change='setCanDraw'>\n                <label for=\"ten\">10</label>\n                <input type=\"radio\" id=\"eight\" value=8 v-model=\"olcSize\" v-on:change='setCanDraw'>\n                <label for=\"eight\">8</label>\n                <input type=\"radio\" id=\"six\" value=6 v-model=\"olcSize\" v-on:change='setCanDraw'>\n                <label for=\"six\">6</label>\n                <input type=\"radio\" id=\"four\" value=4 v-model=\"olcSize\" v-on:change='setCanDraw'>\n                <label for=\"four\">4</label>\n                <input type=\"radio\" id=\"two\" value=2 v-model=\"olcSize\" v-on:change='setCanDraw'>\n                <label for=\"two\">2</label>\n              </div>\n            </div>\n            <div class=\"card w-25 border-light bg-light\">\n              <div class=\"card-header h-25\">Size Reference</div>\n              <div class=\"card-body\">\n                <div class=\"col-sm col-sm-auto pr-0\">\n                  <b-img class=\"zoom border border-dark\" :src=\"olcImg\" width=\"60\" height=\"40\"/>\n                </div>\n              </div>\n            </div>\n            <div class=\"card border-light bg-light\">\n              <div class=\"card-header h-25\">Options</div>\n              <div class=\"card-body\">\n                <div class=\"btn-group-vertical\" role=\"group\" aria-label=\"Basic example\">\n                  <b-btn class=\"btn btn-secondary btn-sm\" id=\"redraw\" v-on:click=\"drawGrid\">Draw Grid</b-btn>\n                  <b-popover target=\"redraw\"\n                         triggers=\"hover\"\n                         placement=\"right\"\n                         container=\"body\"\n                         :disabled=\"canDraw===true\">\n                       Zoom in or select different size\n                  </b-popover>\n                  <b-btn class=\"btn btn-secondary btn-sm\" v-on:click=\"clearMap\">Clear Map</b-btn>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <b-row class=\"py-2\">\n        <b-col>\n          <div id=\"map-canvas-draw\" class=\"w-100\" style=\"max-width: 700px; height: 500px\"></div>\n        </b-col>\n        <b-col cols=\"3\">\n          <div class=\"d-flex align-items-start flex-column\" style=\"height: 500px;\">\n            <div class=\"mb-auto p-2\">\n              <span>Selected OLCs:</span>\n              <b-form-textarea\n                v-model=\"olcText\"\n                :disabled=\"true\"\n                :max-rows=\"20\">\n              </b-form-textarea>\n            </div>\n          </div>\n        </b-col>\n      </b-row>\n    </div>\n  </b-container>\n</template>\n\n<script>\n\nlet MapControl = require('../../static/js/mapControl').default\n\nlet mapId = 'map-canvas-draw'\nlet mapCtl = new MapControl()\n\nexport default {\n  created: async () => {\n    mapCtl.globalMap = await document.getElementById(mapId)\n    mapCtl.newMap(mapId)\n  },\n  name: 'olcDraw',\n  data () {\n    return {\n      olcSize: 6,\n      olcImg: '/static/img/olc_size_6.png',\n      olcText: '',\n      canDraw: true,\n      map: null,\n      selectOlcAlert: false,\n      radius: '5',\n      zoomSize: {\n        2: 4,\n        4: 6,\n        6: 11,\n        8: 15,\n        10: 19\n      },\n      clickedData: {\n        lat: '',\n        lon: '',\n        olcCode: ''\n      }\n    }\n  },\n  methods: {\n    async loadMap () {\n      mapCtl.loadOlc(this.radius, this.olcSize)\n    },\n    setCanDraw () {\n      this.canDraw = this.map.globalMap.getZoom() >= this.zoomSize[this.olcSize]\n      this.olcImg = '/static/img/olc_size_' + this.olcSize + '.png'\n    },\n    clearMap () {\n      mapCtl.clear()\n      this.olcText = ''\n    },\n    loadOlcText () {\n      this.olcText = mapCtl.olcText()\n    },\n    drawGrid () {\n      if (this.canDraw) {\n        mapCtl.drawGrid(this.olcSize)\n      }\n    }\n  },\n  mounted: async function () {\n    this.map = await mapCtl\n    let _thisVue = this\n    this.map.globalMap.addListener('click', (e) => {\n      if (_thisVue.olcSize) {\n        mapCtl.placeMarkerAndPanTo(e.latLng, _thisVue.olcSize)\n        _thisVue.loadOlcText()\n      } else {\n        _thisVue.selectOlcAlert = true\n      }\n    })\n    this.map.globalMap.addListener('bounds_changed', () => {\n      _thisVue.canDraw = (this.map.globalMap.getZoom() >= _thisVue.zoomSize[_thisVue.olcSize])\n    })\n  }\n}\n\n</script>\n\n<style scoped>\n.zoom:hover {\n    transform: scale(8);\n    position: absolute;\n    z-index: 1;\n    transform-origin:top;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/draw.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"bv-example-row bv-example-row-flex-cols\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col d-flex justify-content-between\",staticStyle:{\"max-width\":\"700px\"}},[_c('p',[_vm._v(\"\\n          Click around the map below to create custom geo boundaries using OLCs with various sizes.  The codes you choose will appear in the adjacent text box.\\n        \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col justify-content-between\",staticStyle:{\"max-width\":\"700px\"}},[_c('div',{staticClass:\"card-group\"},[_c('div',{staticClass:\"card border-light bg-light\"},[_c('div',{staticClass:\"card-header h-25\"},[_vm._v(\"OLC Size:\")]),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.olcSize),expression:\"olcSize\"}],attrs:{\"type\":\"radio\",\"id\":\"ten\",\"value\":\"10\"},domProps:{\"checked\":_vm._q(_vm.olcSize,\"10\")},on:{\"change\":[function($event){_vm.olcSize=\"10\"},_vm.setCanDraw]}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"ten\"}},[_vm._v(\"10\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.olcSize),expression:\"olcSize\"}],attrs:{\"type\":\"radio\",\"id\":\"eight\",\"value\":\"8\"},domProps:{\"checked\":_vm._q(_vm.olcSize,\"8\")},on:{\"change\":[function($event){_vm.olcSize=\"8\"},_vm.setCanDraw]}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"eight\"}},[_vm._v(\"8\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.olcSize),expression:\"olcSize\"}],attrs:{\"type\":\"radio\",\"id\":\"six\",\"value\":\"6\"},domProps:{\"checked\":_vm._q(_vm.olcSize,\"6\")},on:{\"change\":[function($event){_vm.olcSize=\"6\"},_vm.setCanDraw]}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"six\"}},[_vm._v(\"6\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.olcSize),expression:\"olcSize\"}],attrs:{\"type\":\"radio\",\"id\":\"four\",\"value\":\"4\"},domProps:{\"checked\":_vm._q(_vm.olcSize,\"4\")},on:{\"change\":[function($event){_vm.olcSize=\"4\"},_vm.setCanDraw]}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"four\"}},[_vm._v(\"4\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.olcSize),expression:\"olcSize\"}],attrs:{\"type\":\"radio\",\"id\":\"two\",\"value\":\"2\"},domProps:{\"checked\":_vm._q(_vm.olcSize,\"2\")},on:{\"change\":[function($event){_vm.olcSize=\"2\"},_vm.setCanDraw]}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"two\"}},[_vm._v(\"2\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"card w-25 border-light bg-light\"},[_c('div',{staticClass:\"card-header h-25\"},[_vm._v(\"Size Reference\")]),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"col-sm col-sm-auto pr-0\"},[_c('b-img',{staticClass:\"zoom border border-dark\",attrs:{\"src\":_vm.olcImg,\"width\":\"60\",\"height\":\"40\"}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"card border-light bg-light\"},[_c('div',{staticClass:\"card-header h-25\"},[_vm._v(\"Options\")]),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"btn-group-vertical\",attrs:{\"role\":\"group\",\"aria-label\":\"Basic example\"}},[_c('b-btn',{staticClass:\"btn btn-secondary btn-sm\",attrs:{\"id\":\"redraw\"},on:{\"click\":_vm.drawGrid}},[_vm._v(\"Draw Grid\")]),_vm._v(\" \"),_c('b-popover',{attrs:{\"target\":\"redraw\",\"triggers\":\"hover\",\"placement\":\"right\",\"container\":\"body\",\"disabled\":_vm.canDraw===true}},[_vm._v(\"\\n                     Zoom in or select different size\\n                \")]),_vm._v(\" \"),_c('b-btn',{staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":_vm.clearMap}},[_vm._v(\"Clear Map\")])],1)])])])])]),_vm._v(\" \"),_c('b-row',{staticClass:\"py-2\"},[_c('b-col',[_c('div',{staticClass:\"w-100\",staticStyle:{\"max-width\":\"700px\",\"height\":\"500px\"},attrs:{\"id\":\"map-canvas-draw\"}})]),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('div',{staticClass:\"d-flex align-items-start flex-column\",staticStyle:{\"height\":\"500px\"}},[_c('div',{staticClass:\"mb-auto p-2\"},[_c('span',[_vm._v(\"Selected OLCs:\")]),_vm._v(\" \"),_c('b-form-textarea',{attrs:{\"disabled\":true,\"max-rows\":20},model:{value:(_vm.olcText),callback:function ($$v) {_vm.olcText=$$v},expression:\"olcText\"}})],1)])])],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3477e586\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/draw.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3477e586\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./draw.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./draw.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./draw.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3477e586\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./draw.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3477e586\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/draw.vue\n// module id = null\n// module chunks = ","<template>\n  <b-tabs>\n      <b-tab title=\"Overview\" active>\n        <br>\n        <olcOverview/>\n      </b-tab>\n      <b-tab title=\"Convert\" >\n        <br>\n        <plotPoi/>\n      </b-tab>\n      <b-tab title=\"Draw\">\n        <br>\n        <draw/>\n      </b-tab>\n    </b-tabs>\n</template>\n\n<script>\n\nimport olcOverview from '@/components/olc_overview'\nimport plotPoi from '@/components/plot_poi'\nimport draw from '@/components/draw'\n\nexport default {\n  name: 'olcHome',\n  components: {draw, olcOverview, plotPoi}\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-tabs',[_c('b-tab',{attrs:{\"title\":\"Overview\",\"active\":\"\"}},[_c('br'),_vm._v(\" \"),_c('olcOverview')],1),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Convert\"}},[_c('br'),_vm._v(\" \"),_c('plotPoi')],1),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Draw\"}},[_c('br'),_vm._v(\" \"),_c('draw')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46842571\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46842571\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = null\n// module chunks = ","<template>\n  <b-container >\n    <div class=\"row justify-content-center\">\n      <div class=\"col\">\n        <div class=\"row justify-content-center\">\n          <p>\n            Please contact the site owner with questions or suggestions.\n          </p>\n        </div>\n        <div class=\"row justify-content-center\">\n          <form class=\"needs-validation\" @submit.prevent=\"submitForm\">\n            <div class=\"form-row form-group\">\n              <div class=\"col\">\n                <input v-model=\"formData.firstName\" type=\"text\" class=\"form-control\" placeholder=\"First name\" required>\n              </div>\n              <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" v-model=\"formData.lastName\" placeholder=\"Last name\" required>\n              </div>\n            </div>\n            <div class=\"row form-group\">\n              <div class=\"col\">\n                <input type=\"email\" class=\"form-control\" v-model=\"formData.email\" placeholder=\"Email (optional)\">\n              </div>\n            </div>\n            <div class=\"row form-group\">\n              <div class=\"col w-100\">\n                <textarea class=\"form-control\" v-model=\"formData.msg\" rows=\"15\" placeholder=\"Message\" required></textarea>\n              </div>\n            </div>\n            <div class=\"g-recaptcha\" data-sitekey=\"6Lf9CF8UAAAAAH47T1lBJL3A_vro_jTf1zV8aOUQ\" data-callback=\"onSuccess\"></div>\n            <br>\n            <button id=\"contactSubmit\" class=\"btn btn-primary\" type=\"submit\" disabled>Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </b-container>\n</template>\n\n<script>\n\nlet api = require('../../src/api.js').default\n\nexport default {\n  created () {\n    let recaptchaScript = document.createElement('script')\n    recaptchaScript.setAttribute('src', 'https://www.google.com/recaptcha/api.js')\n    recaptchaScript.async = true\n    document.head.appendChild(recaptchaScript)\n\n    let recaptchaSubmit = document.createElement('script')\n    recaptchaSubmit.setAttribute('src', '../../static/js/' + api.env + '/recaptchaCtl.js')\n    document.head.appendChild(recaptchaSubmit)\n  },\n  name: 'contact',\n  data () {\n    return {\n      formData: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        msg: '',\n        ipInfo: ''\n      }\n    }\n  },\n  methods: {\n    async submitForm () {\n      this.formData.ipInfo = await api.clientInfoApi.getInfo()\n      api.exec.formSubmit(this.formData)\n      document.getElementById('contactSubmit').disabled = true\n      alert('Your comment has been submitted')\n    }\n  }\n}\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/contact.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('div',{staticClass:\"row justify-content-center\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"row justify-content-center\"},[_c('p',[_vm._v(\"\\n          Please contact the site owner with questions or suggestions.\\n        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"row justify-content-center\"},[_c('form',{staticClass:\"needs-validation\",on:{\"submit\":function($event){$event.preventDefault();return _vm.submitForm($event)}}},[_c('div',{staticClass:\"form-row form-group\"},[_c('div',{staticClass:\"col\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.firstName),expression:\"formData.firstName\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"First name\",\"required\":\"\"},domProps:{\"value\":(_vm.formData.firstName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.formData, \"firstName\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.lastName),expression:\"formData.lastName\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Last name\",\"required\":\"\"},domProps:{\"value\":(_vm.formData.lastName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.formData, \"lastName\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"row form-group\"},[_c('div',{staticClass:\"col\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.email),expression:\"formData.email\"}],staticClass:\"form-control\",attrs:{\"type\":\"email\",\"placeholder\":\"Email (optional)\"},domProps:{\"value\":(_vm.formData.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.formData, \"email\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"row form-group\"},[_c('div',{staticClass:\"col w-100\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.msg),expression:\"formData.msg\"}],staticClass:\"form-control\",attrs:{\"rows\":\"15\",\"placeholder\":\"Message\",\"required\":\"\"},domProps:{\"value\":(_vm.formData.msg)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.formData, \"msg\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"g-recaptcha\",attrs:{\"data-sitekey\":\"6Lf9CF8UAAAAAH47T1lBJL3A_vro_jTf1zV8aOUQ\",\"data-callback\":\"onSuccess\"}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",attrs:{\"id\":\"contactSubmit\",\"type\":\"submit\",\"disabled\":\"\"}},[_vm._v(\"Submit\")])])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-24267c7d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\",\"b-img\":\"src\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/contact.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./contact.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./contact.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24267c7d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\",\\\"b-img\\\":\\\"src\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./contact.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/contact.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport About from '@/components/about'\nimport Home from '@/components/Home'\nimport Contact from '@/components/contact'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'olcHome',\n      component: Home\n    },\n    {\n      path: '/about',\n      name: 'about',\n      component: About\n    },\n    {\n      path: '/contact',\n      name: 'contact',\n      component: Contact\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport BootstrapVue from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport '../static/css/gmaps.css'\nimport '../static/css/fonts.googleapis.css'\n\nVue.config.productionTip = false\n\nVue.use(BootstrapVue)\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#olc',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import axios from 'axios'\n\nconst apiUrl = process.env.API_URL\nvar env = process.env.NODE_ENV\nconsole.log('apiUrl', apiUrl)\nconsole.log('env', env)\nconst client = axios.create({\n  baseURL: apiUrl,\n  json: true\n})\n\nvar clientInfoApi = {\n  getInfo () {\n    return axios.get('https://json.geoiplookup.io/api').then((req) => {\n      return req.data\n    })\n  }\n}\n\nvar exec = {\n  execute (method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data\n    }).then(function (req) {\n      return req.data\n    })\n  },\n  getOlcs (lat, lon, radius, size) {\n    let params = 'lat=' + lat + '&lon=' + lon + '&rad=' + radius + '&sz=' + size\n    return this.execute('get', '/api/olcCodes?' + params)\n  },\n  postOlcs (coords) {\n    return this.execute('post', '/api/olcCodes', coords)\n  },\n  testGetOlcs () {\n    return this.execute('get', '/api/testOlcs')\n  },\n  formSubmit (formData) {\n    return this.execute('post', '/api/submit', formData)\n  }\n}\n\nexport default {\n  exec, env, clientInfoApi\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the 'License');\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an 'AS IS' BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Convert locations to and from short codes.\n *\n * Open Location Codes are short, 10-11 character codes that can be used instead\n * of street addresses. The codes can be generated and decoded offline, and use\n * a reduced character set that minimises the chance of codes including words.\n *\n * Codes are able to be shortened relative to a nearby location. This means that\n * in many cases, only four to seven characters of the code are needed.\n * To recover the original code, the same location is not required, as long as\n * a nearby location is provided.\n *\n * Codes represent rectangular areas rather than points, and the longer the\n * code, the smaller the area. A 10 character code represents a 13.5x13.5\n * meter area (at the equator. An 11 character code represents approximately\n * a 2.8x3.5 meter area.\n *\n * Two encoding algorithms are used. The first 10 characters are pairs of\n * characters, one for latitude and one for latitude, using base 20. Each pair\n * reduces the area of the code by a factor of 400. Only even code lengths are\n * sensible, since an odd-numbered length would have sides in a ratio of 20:1.\n *\n * At position 11, the algorithm changes so that each character selects one\n * position from a 4x5 grid. This allows single-character refinements.\n *\n * Examples:\n *\n *   Encode a location, default accuracy:\n *   var code = OpenLocationCode.encode(47.365590, 8.524997);\n *\n *   Encode a location using one stage of additional refinement:\n *   var code = OpenLocationCode.encode(47.365590, 8.524997, 11);\n *\n *   Decode a full code:\n *   var coord = OpenLocationCode.decode(code);\n *   var msg = 'Center is ' + coord.latitudeCenter + ',' + coord.longitudeCenter;\n *\n *   Attempt to trim the first characters from a code:\n *   var shortCode = OpenLocationCode.shorten('8FVC9G8F+6X', 47.5, 8.5);\n *\n *   Recover the full code from a short code:\n *   var code = OpenLocationCode.recoverNearest('9G8F+6X', 47.4, 8.6);\n *   var code = OpenLocationCode.recoverNearest('8F+6X', 47.4, 8.6);\n */\n(function (root, factory) {\n  /* global define, module */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['b'], function (b) {\n      return (root.returnExportsGlobal = factory(b));\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require('b'));\n  } else {\n    // Browser globals\n    root.OpenLocationCode = factory();\n  }\n} (this, function () {\n  var OpenLocationCode = {};\n\n  /**\n   * Provides a normal precision code, approximately 14x14 meters.\n   * @const {number}\n   */\n  OpenLocationCode.CODE_PRECISION_NORMAL = 10;\n\n  /**\n   * Provides an extra precision code, approximately 2x3 meters.\n   * @const {number}\n   */\n  OpenLocationCode.CODE_PRECISION_EXTRA = 11;\n\n  // A separator used to break the code into two parts to aid memorability.\n  var SEPARATOR_ = '+';\n\n  // The number of characters to place before the separator.\n  var SEPARATOR_POSITION_ = 8;\n\n  // The character used to pad codes.\n  var PADDING_CHARACTER_ = '0';\n\n  // The character set used to encode the values.\n  var CODE_ALPHABET_ = '23456789CFGHJMPQRVWX';\n\n  // The base to use to convert numbers to/from.\n  var ENCODING_BASE_ = CODE_ALPHABET_.length;\n\n  // The maximum value for latitude in degrees.\n  var LATITUDE_MAX_ = 90;\n\n  // The maximum value for longitude in degrees.\n  var LONGITUDE_MAX_ = 180;\n\n  // Maxiumum code length using lat/lng pair encoding. The area of such a\n  // code is approximately 13x13 meters (at the equator), and should be suitable\n  // for identifying buildings. This excludes prefix and separator characters.\n  var PAIR_CODE_LENGTH_ = 10;\n\n  // The resolution values in degrees for each position in the lat/lng pair\n  // encoding. These give the place value of each position, and therefore the\n  // dimensions of the resulting area.\n  var PAIR_RESOLUTIONS_ = [20.0, 1.0, .05, .0025, .000125];\n\n  // Number of columns in the grid refinement method.\n  var GRID_COLUMNS_ = 4;\n\n  // Number of rows in the grid refinement method.\n  var GRID_ROWS_ = 5;\n\n  // Size of the initial grid in degrees.\n  var GRID_SIZE_DEGREES_ = 0.000125;\n\n  // Minimum length of a code that can be shortened.\n  var MIN_TRIMMABLE_CODE_LEN_ = 6;\n\n  /**\n    Returns the OLC alphabet.\n   */\n  var getAlphabet = OpenLocationCode.getAlphabet = function() {\n    return CODE_ALPHABET_;\n  };\n\n  /**\n   * Determines if a code is valid.\n   *\n   * To be valid, all characters must be from the Open Location Code character\n   * set with at most one separator. The separator can be in any even-numbered\n   * position up to the eighth digit.\n   *\n   * @param {string} code The string to check.\n   * @return {boolean} True if the string is a valid code.\n   */\n  var isValid = OpenLocationCode.isValid = function(code) {\n    if (!code || typeof code !== 'string') {\n      return false;\n    }\n    // The separator is required.\n    if (code.indexOf(SEPARATOR_) == -1) {\n      return false;\n    }\n    if (code.indexOf(SEPARATOR_) != code.lastIndexOf(SEPARATOR_)) {\n      return false;\n    }\n    // Is it the only character?\n    if (code.length == 1) {\n      return false;\n    }\n    // Is it in an illegal position?\n    if (code.indexOf(SEPARATOR_) > SEPARATOR_POSITION_ ||\n        code.indexOf(SEPARATOR_) % 2 == 1) {\n      return false;\n    }\n    // We can have an even number of padding characters before the separator,\n    // but then it must be the final character.\n    if (code.indexOf(PADDING_CHARACTER_) > -1) {\n      // Not allowed to start with them!\n      if (code.indexOf(PADDING_CHARACTER_) == 0) {\n        return false;\n      }\n      // There can only be one group and it must have even length.\n      var padMatch = code.match(new RegExp('(' + PADDING_CHARACTER_ + '+)', 'g'));\n      if (padMatch.length > 1 || padMatch[0].length % 2 == 1 ||\n          padMatch[0].length > SEPARATOR_POSITION_ - 2) {\n        return false;\n      }\n      // If the code is long enough to end with a separator, make sure it does.\n      if (code.charAt(code.length - 1) != SEPARATOR_) {\n        return false;\n      }\n    }\n    // If there are characters after the separator, make sure there isn't just\n    // one of them (not legal).\n    if (code.length - code.indexOf(SEPARATOR_) - 1 == 1) {\n      return false;\n    }\n\n    // Strip the separator and any padding characters.\n    code = code.replace(new RegExp('\\\\' + SEPARATOR_ + '+'), '')\n        .replace(new RegExp(PADDING_CHARACTER_ + '+'), '');\n    // Check the code contains only valid characters.\n    for (var i = 0, len = code.length; i < len; i++) {\n      var character = code.charAt(i).toUpperCase();\n      if (character != SEPARATOR_ && CODE_ALPHABET_.indexOf(character) == -1) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Determines if a code is a valid short code.\n   *\n   * @param {string} code The string to check.\n   * @return {boolean} True if the string can be produced by removing four or\n   *     more characters from the start of a valid code.\n   */\n  var isShort = OpenLocationCode.isShort = function(code) {\n    // Check it's valid.\n    if (!isValid(code)) {\n      return false;\n    }\n    // If there are less characters than expected before the SEPARATOR.\n    if (code.indexOf(SEPARATOR_) >= 0 &&\n        code.indexOf(SEPARATOR_) < SEPARATOR_POSITION_) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Determines if a code is a valid full Open Location Code.\n   *\n   * @param {string} code The string to check.\n   * @return {boolean} True if the code represents a valid latitude and\n   *     longitude combination.\n   */\n  var isFull = OpenLocationCode.isFull = function(code) {\n    if (!isValid(code)) {\n      return false;\n    }\n    // If it's short, it's not full.\n    if (isShort(code)) {\n      return false;\n    }\n\n    // Work out what the first latitude character indicates for latitude.\n    var firstLatValue = CODE_ALPHABET_.indexOf(\n        code.charAt(0).toUpperCase()) * ENCODING_BASE_;\n    if (firstLatValue >= LATITUDE_MAX_ * 2) {\n      // The code would decode to a latitude of >= 90 degrees.\n      return false;\n    }\n    if (code.length > 1) {\n      // Work out what the first longitude character indicates for longitude.\n      var firstLngValue = CODE_ALPHABET_.indexOf(\n          code.charAt(1).toUpperCase()) * ENCODING_BASE_;\n      if (firstLngValue >= LONGITUDE_MAX_ * 2) {\n        // The code would decode to a longitude of >= 180 degrees.\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Encode a location into an Open Location Code.\n   *\n   * @param {number} latitude The latitude in signed decimal degrees. It will\n   *     be clipped to the range -90 to 90.\n   * @param {number} longitude The longitude in signed decimal degrees. Will be\n   *     normalised to the range -180 to 180.\n   * @param {?number} codeLength The length of the code to generate. If\n   *     omitted, the value OpenLocationCode.CODE_PRECISION_NORMAL will be used.\n   *     For a more precise result, OpenLocationCode.CODE_PRECISION_EXTRA is\n   *     recommended.\n   * @return {string} The code.\n   * @throws {Exception} if any of the input values are not numbers.\n   */\n  var encode = OpenLocationCode.encode = function(latitude,\n      longitude, codeLength) {\n    // console.log(latitude, longitude, codeLength)\n    latitude = Number(latitude);\n    longitude = Number(longitude);\n    if (typeof codeLength == 'undefined') {\n      codeLength = OpenLocationCode.CODE_PRECISION_NORMAL;\n    } else {\n      codeLength = Number(codeLength);\n    };\n    if (isNaN(latitude) || isNaN(longitude) || isNaN(codeLength)) {\n\n      throw ('ValueError: Parameters are not numbers');\n    }\n    if (codeLength < 2 ||\n        (codeLength < SEPARATOR_POSITION_ && codeLength % 2 == 1)) {\n      throw 'IllegalArgumentException: Invalid Open Location Code length';\n    }\n    // Ensure that latitude and longitude are valid.\n    latitude = clipLatitude(latitude);\n    longitude = normalizeLongitude(longitude);\n    // Latitude 90 needs to be adjusted to be just less, so the returned code\n    // can also be decoded.\n    if (latitude == 90) {\n      latitude = latitude - computeLatitudePrecision(codeLength);\n    }\n    var code = encodePairs(\n        latitude, longitude, Math.min(codeLength, PAIR_CODE_LENGTH_));\n    // If the requested length indicates we want grid refined codes.\n    if (codeLength > PAIR_CODE_LENGTH_) {\n      code += encodeGrid(\n          latitude, longitude, codeLength - PAIR_CODE_LENGTH_);\n    }\n    return code;\n  };\n\n  /**\n   * Decodes an Open Location Code into its location coordinates.\n   *\n   * Returns a CodeArea object that includes the coordinates of the bounding\n   * box - the lower left, center and upper right.\n   *\n   * @param {string} code The code to decode.\n   * @return {OpenLocationCode.CodeArea} An object with the coordinates of the\n   *     area of the code.\n   * @throws {Exception} If the code is not valid.\n   */\n  var decode = OpenLocationCode.decode = function(code) {\n    if (!isFull(code)) {\n      throw ('IllegalArgumentException: ' +\n          'Passed Open Location Code is not a valid full code: ' + code);\n    }\n    // Strip out separator character (we've already established the code is\n    // valid so the maximum is one), padding characters and convert to upper\n    // case.\n    code = code.replace(SEPARATOR_, '');\n    code = code.replace(new RegExp(PADDING_CHARACTER_ + '+'), '');\n    code = code.toUpperCase();\n    // Decode the lat/lng pair component.\n    var codeArea = decodePairs(code.substring(0, PAIR_CODE_LENGTH_));\n    // If there is a grid refinement component, decode that.\n    if (code.length <= PAIR_CODE_LENGTH_) {\n      return codeArea;\n    }\n    var gridArea = decodeGrid(code.substring(PAIR_CODE_LENGTH_));\n    return CodeArea(\n      codeArea.latitudeLo + gridArea.latitudeLo,\n      codeArea.longitudeLo + gridArea.longitudeLo,\n      codeArea.latitudeLo + gridArea.latitudeHi,\n      codeArea.longitudeLo + gridArea.longitudeHi,\n      codeArea.codeLength + gridArea.codeLength);\n  };\n\n  /**\n   * Recover the nearest matching code to a specified location.\n   *\n   * Given a valid short Open Location Code this recovers the nearest matching\n   * full code to the specified location.\n   *\n   * @param {string} shortCode A valid short code.\n   * @param {number} referenceLatitude The latitude to use for the reference\n   *     location.\n   * @param {number} referenceLongitude The longitude to use for the reference\n   *     location.\n   * @return {string} The nearest matching full code to the reference location.\n   * @throws {Exception} if the short code is not valid, or the reference\n   *     position values are not numbers.\n   */\n  var recoverNearest = OpenLocationCode.recoverNearest = function(\n      shortCode, referenceLatitude, referenceLongitude) {\n    if (!isShort(shortCode)) {\n      if (isFull(shortCode)) {\n        return shortCode;\n      } else {\n        throw 'ValueError: Passed short code is not valid: ' + shortCode;\n      }\n    }\n    referenceLatitude = Number(referenceLatitude);\n    referenceLongitude = Number(referenceLongitude);\n    if (isNaN(referenceLatitude) || isNaN(referenceLongitude)) {\n      throw ('ValueError: Reference position are not numbers');\n    }\n    // Ensure that latitude and longitude are valid.\n    referenceLatitude = clipLatitude(referenceLatitude);\n    referenceLongitude = normalizeLongitude(referenceLongitude);\n\n    // Clean up the passed code.\n    shortCode = shortCode.toUpperCase();\n    // Compute the number of digits we need to recover.\n    var paddingLength = SEPARATOR_POSITION_ - shortCode.indexOf(SEPARATOR_);\n    // The resolution (height and width) of the padded area in degrees.\n    var resolution = Math.pow(20, 2 - (paddingLength / 2));\n    // Distance from the center to an edge (in degrees).\n    var areaToEdge = resolution / 2.0;\n\n    // Use the reference location to pad the supplied short code and decode it.\n    var codeArea = decode(\n        encode(referenceLatitude, referenceLongitude).substr(0, paddingLength)\n        + shortCode);\n    // How many degrees latitude is the code from the reference? If it is more\n    // than half the resolution, we need to move it east or west.\n    var degreesDifference = codeArea.latitudeCenter - referenceLatitude;\n    if (degreesDifference > areaToEdge) {\n      // If the center of the short code is more than half a cell east,\n      // then the best match will be one position west.\n      codeArea.latitudeCenter -= resolution;\n    } else if (degreesDifference < -areaToEdge) {\n      // If the center of the short code is more than half a cell west,\n      // then the best match will be one position east.\n      codeArea.latitudeCenter += resolution;\n    }\n\n    // How many degrees longitude is the code from the reference?\n    degreesDifference = codeArea.longitudeCenter - referenceLongitude;\n    if (degreesDifference > areaToEdge) {\n      codeArea.longitudeCenter -= resolution;\n    } else if (degreesDifference < -areaToEdge) {\n      codeArea.longitudeCenter += resolution;\n    }\n\n    return encode(\n        codeArea.latitudeCenter, codeArea.longitudeCenter, codeArea.codeLength);\n  };\n\n  /**\n   * Remove characters from the start of an OLC code.\n   *\n   * This uses a reference location to determine how many initial characters\n   * can be removed from the OLC code. The number of characters that can be\n   * removed depends on the distance between the code center and the reference\n   * location.\n   *\n   * @param {string} code The full code to shorten.\n   * @param {number} latitude The latitude to use for the reference location.\n   * @param {number} longitude The longitude to use for the reference location.\n   * @return {string} The code, shortened as much as possible that it is still\n   *     the closest matching code to the reference location.\n   * @throws {Exception} if the passed code is not a valid full code or the\n   *     reference location values are not numbers.\n   */\n  var shorten = OpenLocationCode.shorten = function(\n      code, latitude, longitude) {\n    if (!isFull(code)) {\n      throw 'ValueError: Passed code is not valid and full: ' + code;\n    }\n    if (code.indexOf(PADDING_CHARACTER_) != -1) {\n      throw 'ValueError: Cannot shorten padded codes: ' + code;\n    }\n    var code = code.toUpperCase();\n    var codeArea = decode(code);\n    if (codeArea.codeLength < MIN_TRIMMABLE_CODE_LEN_) {\n      throw 'ValueError: Code length must be at least ' +\n          MIN_TRIMMABLE_CODE_LEN_;\n    }\n    // Ensure that latitude and longitude are valid.\n    latitude = Number(latitude);\n    longitude = Number(longitude);\n    if (isNaN(latitude) || isNaN(longitude)) {\n      throw ('ValueError: Reference position are not numbers');\n    }\n    latitude = clipLatitude(latitude);\n    longitude = normalizeLongitude(longitude);\n    // How close are the latitude and longitude to the code center.\n    var range = Math.max(\n        Math.abs(codeArea.latitudeCenter - latitude),\n        Math.abs(codeArea.longitudeCenter - longitude));\n    for (var i = PAIR_RESOLUTIONS_.length - 2; i >= 1; i--) {\n      // Check if we're close enough to shorten. The range must be less than 1/2\n      // the resolution to shorten at all, and we want to allow some safety, so\n      // use 0.3 instead of 0.5 as a multiplier.\n      if (range < (PAIR_RESOLUTIONS_[i] * 0.3)) {\n        // Trim it.\n        return code.substring((i + 1) * 2);\n      }\n    }\n    return code;\n  };\n\n  /**\n   * Clip a latitude into the range -90 to 90.\n   *\n   * @param {number} latitude\n   * @return {number} The latitude value clipped to be in the range.\n   */\n  var clipLatitude = function(latitude) {\n    return Math.min(90, Math.max(-90, latitude));\n  };\n\n  /**\n   * Compute the latitude precision value for a given code length.\n   * Lengths <= 10 have the same precision for latitude and longitude, but\n   * lengths > 10 have different precisions due to the grid method having\n   * fewer columns than rows.\n   * @param {number} codeLength\n   * @return {number} The latitude precision in degrees.\n   */\n  var computeLatitudePrecision = function(codeLength) {\n    if (codeLength <= 10) {\n      return Math.pow(20, Math.floor(codeLength / -2 + 2));\n    }\n    return Math.pow(20, -3) / Math.pow(GRID_ROWS_, codeLength - 10);\n  };\n\n  /**\n   * Normalize a longitude into the range -180 to 180, not including 180.\n   *\n   * @param {number} longitude\n   * @return {number} Normalized into the range -180 to 180.\n   */\n  var normalizeLongitude = function(longitude) {\n    while (longitude < -180) {\n      longitude = longitude + 360;\n    }\n    while (longitude >= 180) {\n      longitude = longitude - 360;\n    }\n    return longitude;\n  };\n\n  /**\n   * Encode a location into a sequence of OLC lat/lng pairs.\n   *\n   * This uses pairs of characters (longitude and latitude in that order) to\n   * represent each step in a 20x20 grid. Each code, therefore, has 1/400th\n   * the area of the previous code.\n   *\n   * This algorithm is used up to 10 digits.\n   *\n   * @param {number} latitude The location to encode.\n   * @param {number} longitude The location to encode.\n   * @param {number} codeLength Requested code length.\n   * @return {string} The up to 10-digit OLC code for the location.\n   */\n  var encodePairs = function(latitude, longitude, codeLength) {\n    var code = '';\n    // Adjust latitude and longitude so they fall into positive ranges.\n    var adjustedLatitude = latitude + LATITUDE_MAX_;\n    var adjustedLongitude = longitude + LONGITUDE_MAX_;\n    // Count digits - can't use string length because it may include a separator\n    // character.\n    var digitCount = 0;\n    while (digitCount < codeLength) {\n      // Provides the value of digits in this place in decimal degrees.\n      var placeValue = PAIR_RESOLUTIONS_[Math.floor(digitCount / 2)];\n      // Do the latitude - gets the digit for this place and subtracts that for\n      // the next digit.\n      var digitValue = Math.floor(adjustedLatitude / placeValue);\n      adjustedLatitude -= digitValue * placeValue;\n      code += CODE_ALPHABET_.charAt(digitValue);\n      digitCount += 1;\n      // And do the longitude - gets the digit for this place and subtracts that\n      // for the next digit.\n      digitValue = Math.floor(adjustedLongitude / placeValue);\n      adjustedLongitude -= digitValue * placeValue;\n      code += CODE_ALPHABET_.charAt(digitValue);\n      digitCount += 1;\n      // Should we add a separator here?\n      if (digitCount == SEPARATOR_POSITION_ && digitCount < codeLength) {\n        code += SEPARATOR_;\n      }\n    }\n    if (code.length < SEPARATOR_POSITION_) {\n      code = code + Array(SEPARATOR_POSITION_ - code.length + 1).join(PADDING_CHARACTER_);\n    }\n    if (code.length == SEPARATOR_POSITION_) {\n      code = code + SEPARATOR_;\n    }\n    return code;\n  };\n\n  /**\n   * Encode a location using the grid refinement method into an OLC string.\n   *\n   * The grid refinement method divides the area into a grid of 4x5, and uses a\n   * single character to refine the area. This allows default accuracy OLC codes\n   * to be refined with just a single character.\n   *\n   * This algorithm is used for codes longer than 10 digits.\n   *\n   * @param {number} latitude The location to encode.\n   * @param {number} longitude The location to encode.\n   * @param {number} codeLength Requested code length.\n   * @return {string} The OLC code digits from the 11th digit on.\n   */\n  var encodeGrid = function(latitude, longitude, codeLength) {\n    var code = '';\n    var latPlaceValue = GRID_SIZE_DEGREES_;\n    var lngPlaceValue = GRID_SIZE_DEGREES_;\n    // Adjust latitude and longitude so they fall into positive ranges and\n    // get the offset for the required places.\n    var adjustedLatitude = (latitude + LATITUDE_MAX_) % latPlaceValue;\n    var adjustedLongitude = (longitude + LONGITUDE_MAX_) % lngPlaceValue;\n    for (var i = 0; i < codeLength; i++) {\n      // Work out the row and column.\n      var row = Math.floor(adjustedLatitude / (latPlaceValue / GRID_ROWS_));\n      var col = Math.floor(adjustedLongitude / (lngPlaceValue / GRID_COLUMNS_));\n      latPlaceValue /= GRID_ROWS_;\n      lngPlaceValue /= GRID_COLUMNS_;\n      adjustedLatitude -= row * latPlaceValue;\n      adjustedLongitude -= col * lngPlaceValue;\n      code += CODE_ALPHABET_.charAt(row * GRID_COLUMNS_ + col);\n    }\n    return code;\n  };\n\n  /**\n   * Decode an OLC code made up of lat/lng pairs.\n   *\n   * This decodes an OLC code made up of alternating latitude and longitude\n   * characters, encoded using base 20.\n   *\n   * @param {string} code The code to decode, assumed to be a valid full code,\n   *     but with the separator removed.\n   * @return {OpenLocationCode.CodeArea} The code area object.\n   */\n  var decodePairs = function(code) {\n    // Get the latitude and longitude values. These will need correcting from\n    // positive ranges.\n    var latitude = decodePairsSequence(code, 0);\n    var longitude = decodePairsSequence(code, 1);\n    // Correct the values and set them into the CodeArea object.\n    return new CodeArea(\n        latitude[0] - LATITUDE_MAX_,\n        longitude[0] - LONGITUDE_MAX_,\n        latitude[1] - LATITUDE_MAX_,\n        longitude[1] - LONGITUDE_MAX_,\n        code.length);\n  };\n\n  /**\n   * Decode either a latitude or longitude sequence.\n   *\n   * This decodes the latitude or longitude sequence of a lat/lng pair encoding.\n   * Starting at the character at position offset, every second character is\n   * decoded and the value returned.\n   *\n   * @param {string} code A valid full OLC code, with the separator removed.\n   * @param {string} offset The character to start from.\n   * @return {[number]} An array of two numbers, representing the lower and\n   *     upper range in decimal degrees. These are in positive ranges and will\n   *     need to be corrected appropriately.\n   */\n  var decodePairsSequence = function(code, offset) {\n    var i = 0;\n    var value = 0;\n    while (i * 2 + offset < code.length) {\n      value += CODE_ALPHABET_.indexOf(code.charAt(i * 2 + offset)) *\n          PAIR_RESOLUTIONS_[i];\n      i += 1;\n    }\n    return [value, value + PAIR_RESOLUTIONS_[i - 1]];\n  };\n\n  /**\n   * Decode the grid refinement portion of an OLC code.\n   *\n   * @param {string} code The grid refinement section of a code.\n   * @return {OpenLocationCode.CodeArea} The area of the code.\n   */\n  var decodeGrid = function(code) {\n    var latitudeLo = 0.0;\n    var longitudeLo = 0.0;\n    var latPlaceValue = GRID_SIZE_DEGREES_;\n    var lngPlaceValue = GRID_SIZE_DEGREES_;\n    var i = 0;\n    while (i < code.length) {\n      var codeIndex = CODE_ALPHABET_.indexOf(code.charAt(i));\n      var row = Math.floor(codeIndex / GRID_COLUMNS_);\n      var col = codeIndex % GRID_COLUMNS_;\n\n      latPlaceValue /= GRID_ROWS_;\n      lngPlaceValue /= GRID_COLUMNS_;\n\n      latitudeLo += row * latPlaceValue;\n      longitudeLo += col * lngPlaceValue;\n      i += 1;\n    }\n    return CodeArea(\n        latitudeLo, longitudeLo, latitudeLo + latPlaceValue,\n        longitudeLo + lngPlaceValue, code.length);\n  };\n\n  /**\n   * Coordinates of a decoded Open Location Code.\n   *\n   * The coordinates include the latitude and longitude of the lower left and\n   * upper right corners and the center of the bounding box for the area the\n   * code represents.\n   *\n   * @constructor\n   */\n  var CodeArea = OpenLocationCode.CodeArea = function(\n    latitudeLo, longitudeLo, latitudeHi, longitudeHi, codeLength) {\n    return new OpenLocationCode.CodeArea.fn.init(\n        latitudeLo, longitudeLo, latitudeHi, longitudeHi, codeLength);\n  };\n  CodeArea.fn = CodeArea.prototype = {\n    init: function(\n        latitudeLo, longitudeLo, latitudeHi, longitudeHi, codeLength) {\n      /**\n       * The latitude of the SW corner.\n       * @type {number}\n       */\n      this.latitudeLo = latitudeLo;\n      /**\n       * The longitude of the SW corner in degrees.\n       * @type {number}\n       */\n      this.longitudeLo = longitudeLo;\n      /**\n       * The latitude of the NE corner in degrees.\n       * @type {number}\n       */\n      this.latitudeHi = latitudeHi;\n      /**\n       * The longitude of the NE corner in degrees.\n       * @type {number}\n       */\n      this.longitudeHi = longitudeHi;\n      /**\n       * The number of digits in the code.\n       * @type {number}\n       */\n      this.codeLength = codeLength;\n      /**\n       * The latitude of the center in degrees.\n       * @type {number}\n       */\n      this.latitudeCenter = Math.min(\n          latitudeLo + (latitudeHi - latitudeLo) / 2, LATITUDE_MAX_);\n      /**\n       * The longitude of the center in degrees.\n       * @type {number}\n       */\n      this.longitudeCenter = Math.min(\n          longitudeLo + (longitudeHi - longitudeLo) / 2, LONGITUDE_MAX_);\n    }\n  };\n  CodeArea.fn.init.prototype = CodeArea.fn;\n\n  return OpenLocationCode;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/openlocationcode.js\n// module id = oQOm\n// module chunks = 1"],"sourceRoot":""}